:root{
    --smCurve: 10px;
    --medCurve: 20px;
    --circleCurve: 50%;

    --smPadding: 5px;
    --medPadding: 10px;
    --lgPadding: 30px;

    --bgColorOne: aquamarine;
    --bgColorTwo: #bffff3;
    --bgColorThree: #b39d59;

    --accentColor: #597ab3;

    --lightColor: #DFFFF9;
    --darkColor: #202020;
}

* {
    font-family: 'Permanent Marker', cursive;
    margin: 0px;
    padding: 0px;
}

html,
body,
.layer {
    height: 100%;
    background-color: var(--bgColorOne);
}

.layer {
    padding: var(--lgPadding);
    display: flex;
    flex-direction: column;
    align-items: center;
}

.layer > h2 {
    margin: var(--lgPadding);
    text-align: center;
}




.layer > div > #startingDiv {
    display: flex;
    flex-direction: row;
    background-color: var(--bgColorTwo);
    color: var(--darkColor);
    padding: var(--lgPadding);
}

#startingDiv > h1 {
    margin: var(--medPadding);
    align-self: center;
}

#startingDiv > .playerDiv {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

#startingDiv > .playerDiv > h4 {
    text-align: center;
}

#startingDiv > .playerDiv > div {
    display: flex;
    flex-direction: row;
    justify-content: center;
}

.fontDivs {
    background-color: var(--bgColorThree);
}

.playerFont {
    content: url("../data/images/playerFont.png")
}

.botFont {
    content: url("../data/images/botFont.png")
}

.playerFont, .botFont {
    max-width: calc(30%);
    height: auto;
    margin: var(--smPadding);
}

.layer > :nth-child(2){
    display: flex;
    flex-direction: column;
}

.layer > :nth-child(2) > button {
    margin-top: var(--medPadding);
    padding: var(--smPadding) var(--lgPadding);
    max-width: fit-content;
    align-self: center;
}

#gameDiv {
    background-color: purple;
    height: 75%;
    width: 75%;
}
#gameDiv, #gameBoard {
    display: none;
}

#gameBoard {
    max-width: 100%;
    min-width: 100%;
    height: 100%;
    display: grid;
    background-color: red;
    grid-template-columns: repeat(3, 1fr);
    grid-auto-flow: row;
}

#gameBoard > .boxElement {
    border: 1px solid black;
    height: 100%;
    width: 100%;
}

#gameBoard > .boxElement:hover {
    background-color: purple;
    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;   
}

.hoverGrow:hover{
    transform: scale(1.1);
}

.hoverAccentColor:hover {
    background-color: var(--accentColor);
}

.darkBorder {
    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;
}

.hoverDarkBorder:hover{
    box-shadow: rgba(6, 24, 44, 0.4) 0px 0px 0px 2px, rgba(6, 24, 44, 0.65) 0px 4px 6px -1px, rgba(255, 255, 255, 0.08) 0px 1px 0px inset;
}

.sizeUpStartAnimation {
    animation: sizeUpStart 2s linear forwards;
}
.boxElement {
    display: flex;
    justify-content: center;
    align-items: center;
}
.boxHeader {
    font-size: 75px;
}

.hoverGrowAnimation:hover {animation: grow 0.2s linear forwards;}

@keyframes sizeUpStart {
    0% {
        opacity: 0;
        transform: scale(0);
        filter: blur(4px);
        }
    50% {transform: scale(1);}
    100% {
        opacity: 1;
        filter: blur(0px);
    }
}

@keyFrames grow {
    100% {transform: scale(1.25);}
}

